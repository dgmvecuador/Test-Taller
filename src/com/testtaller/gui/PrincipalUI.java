/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.testtaller.gui;

import com.testtaller.Sistema;
import com.testtaller.entidades.Carro;
import com.testtaller.entidades.Marca;
import com.testtaller.entidades.controladores.CarroJpaController;
import com.testtaller.entidades.controladores.MarcaJpaController;
import com.testtaller.entidades.controladores.exceptions.NonexistentEntityException;
import com.testtaller.entidades.controladores.exceptions.PreexistingEntityException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dgmv
 */
public class PrincipalUI extends javax.swing.JFrame {

	/**
	 * Creates new form PrincipalUI
	 */
	public PrincipalUI() {
		initComponents();

		Sistema.arrancarSistema();


		tablaMarca.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent e) {
				if ( e.getValueIsAdjusting() )
					return;

				mostrarInformacionMarca(tablaMarca.getSelectedRow());
			}
		});

		tablaCarros.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent e) {
				if (e.getValueIsAdjusting())
					return;

				mostrarInformacionCarro(tablaCarros.getSelectedRow());
			}
		});
		actualizarMarcas();
	}

	private void mostrarInformacionCarro( int index ) {
		if ( index == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaCarros.getModel();

		CarroJpaController controladorCarro = new CarroJpaController(Sistema.getEmf());
		Carro carroSeleccionado = controladorCarro.findCarro((Integer)modeloActual.getValueAt(index, 0));

		if ( carroSeleccionado == null )
			return;

		txtPlacaCarro.setText(carroSeleccionado.getPlaca());
		cmbMarcas.setSelectedItem(carroSeleccionado.getMarca());
	}

	private void mostrarInformacionMarca( int index ) {
		if ( index == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaMarca.getModel();

		MarcaJpaController controladorMarca = new MarcaJpaController(Sistema.getEmf());
		Marca marcaActual = controladorMarca.findMarca((Integer)modeloActual.getValueAt(index, 0));

		if (marcaActual == null)
			return;

		txtMarcaNombre.setText(marcaActual.getNombre());
	
	}

	private void actualizarCarros() {
		CarroJpaController controladorCarro = new CarroJpaController(Sistema.getEmf());
		ArrayList <Carro> carros = new ArrayList<Carro>(controladorCarro.findCarroEntities());
		DefaultTableModel modeloActual = (DefaultTableModel) tablaCarros.getModel();
		modeloActual.setRowCount(0);

		for ( Carro carro : carros ) {
			modeloActual.addRow(new Object[] {carro.getIdCarro(), carro.getPlaca(), carro.getMarca()});
		}
	}

	private void actualizarMarcas() {
		/* No dejar ver los carros */
		pestanas.setEnabledAt(1, false);

		MarcaJpaController controladorMarca = new MarcaJpaController(Sistema.getEmf());
		ArrayList<Marca> marcas = new ArrayList<Marca>(controladorMarca.findMarcaEntities());
		DefaultTableModel actual = (DefaultTableModel)tablaMarca.getModel();

		/* Limpiar las listas */
		actual.setRowCount(0);
		cmbMarcas.removeAllItems();

		/* PestaÃ±a de carros activada */
		if ( marcas.size() > 0 ) {
			pestanas.setEnabledAt(1, true);
			actualizarCarros();
		}

		/* Escribir las nuevas marcas */
		for ( int i=0; i<marcas.size(); i++ ) {
			actual.addRow(new Object[] {marcas.get(i).getIdMarca(), marcas.get(i).getNombre()});
			cmbMarcas.addItem(marcas.get(i));
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pestanas = new javax.swing.JTabbedPane();
        panelMarcas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMarca = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtMarcaNombre = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        panelCarros = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCarros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPlacaCarro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbMarcas = new javax.swing.JComboBox();
        btnCrearCarro = new javax.swing.JButton();
        btnEditarCarro = new javax.swing.JButton();
        btnBorrarCarro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tablaMarca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_marca", "nombre"
            }
        ));
        tablaMarca.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tablaMarca);

        jLabel2.setText("nombre:");

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMarcasLayout = new javax.swing.GroupLayout(panelMarcas);
        panelMarcas.setLayout(panelMarcasLayout);
        panelMarcasLayout.setHorizontalGroup(
            panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMarcasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMarcasLayout.createSequentialGroup()
                        .addComponent(btnCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelMarcasLayout.createSequentialGroup()
                        .addGroup(panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMarcasLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMarcaNombre))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        panelMarcasLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBorrar, btnCrear, btnEditar});

        panelMarcasLayout.setVerticalGroup(
            panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMarcasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMarcaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMarcasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnCrear)
                    .addComponent(btnEditar)
                    .addComponent(btnBorrar))
                .addContainerGap())
        );

        pestanas.addTab("Marcas", panelMarcas);

        tablaCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Placa", "Marca"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCarros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tablaCarros);

        jLabel1.setText("Placa:");

        jLabel3.setText("Marca:");

        btnCrearCarro.setText("Crear");
        btnCrearCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCarroActionPerformed(evt);
            }
        });

        btnEditarCarro.setText("Editar");
        btnEditarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCarroActionPerformed(evt);
            }
        });

        btnBorrarCarro.setText("Borrar");
        btnBorrarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCarroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCarrosLayout = new javax.swing.GroupLayout(panelCarros);
        panelCarros.setLayout(panelCarrosLayout);
        panelCarrosLayout.setHorizontalGroup(
            panelCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCarrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelCarrosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlacaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMarcas, 0, 107, Short.MAX_VALUE))
                    .addGroup(panelCarrosLayout.createSequentialGroup()
                        .addComponent(btnCrearCarro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCarro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarCarro)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelCarrosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBorrarCarro, btnCrearCarro, btnEditarCarro});

        panelCarrosLayout.setVerticalGroup(
            panelCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCarrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPlacaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbMarcas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearCarro)
                    .addComponent(btnEditarCarro)
                    .addComponent(btnBorrarCarro))
                .addContainerGap())
        );

        pestanas.addTab("Carros", panelCarros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pestanas)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pestanas)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-433)/2, (screenSize.height-413)/2, 433, 413);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
		if (  txtMarcaNombre.getText().isEmpty() ) {
			JOptionPane.showMessageDialog(this, "No ha ingresado nombre de la marca", 
					"Taller GUI", JOptionPane.ERROR_MESSAGE);
			return;
		}
		MarcaJpaController controladorMarca = new MarcaJpaController(Sistema.getEmf());
		Marca marcaNueva = new Marca();
		marcaNueva.setNombre(txtMarcaNombre.getText());

		try {
			controladorMarca.create(marcaNueva);
		} catch ( PreexistingEntityException pee ) {
			System.err.println(pee);
		} catch ( Exception e ) {
			System.err.println(e);
		}

		System.out.println("Marca: "+marcaNueva.getIdMarca()+": "+marcaNueva.getNombre());
		
		actualizarMarcas();
		txtMarcaNombre.setText("");
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
		if ( tablaMarca.getSelectedRow() == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaMarca.getModel();

		MarcaJpaController controladorMarca = new MarcaJpaController(Sistema.getEmf());
		Marca seleccionada  = controladorMarca.findMarca((Integer)modeloActual.getValueAt(tablaMarca.getSelectedRow(), 0));

		if ( seleccionada == null ) {
			System.err.println("No se ha encontrado datos");
		}

		seleccionada.setNombre(txtMarcaNombre.getText());

		try {
			controladorMarca.edit(seleccionada);
		} catch ( NonexistentEntityException neee ) {
			System.err.println(neee);
		} catch ( Exception e ) {
			System.err.println(e);
		}
		
		actualizarMarcas();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
		if ( tablaMarca.getSelectedRow() == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaMarca.getModel();

		MarcaJpaController controladorMarca = new MarcaJpaController(Sistema.getEmf());
		Marca seleccionada  = controladorMarca.findMarca((Integer)modeloActual.getValueAt(tablaMarca.getSelectedRow(), 0));

		if ( seleccionada == null ) {
			System.err.println("No se ha encontrado datos");
		}

		try {
			controladorMarca.destroy(seleccionada.getIdMarca());
		} catch ( NonexistentEntityException neee ) {
			System.err.println(neee);
		} catch ( Exception e ) {
			System.err.println(e);
		}

		actualizarMarcas();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnCrearCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCarroActionPerformed
		if ( txtPlacaCarro.getText().isEmpty() ) {
			JOptionPane.showMessageDialog(this, "No ha ingresado alguna placa para el vehÃ­culo", 
					"Taller GUI", JOptionPane.ERROR_MESSAGE);
			return;
		}

		CarroJpaController controladorCarro = new CarroJpaController(Sistema.getEmf());
		Carro carroNuevo = new Carro();

		carroNuevo.setPlaca(txtPlacaCarro.getText());
		carroNuevo.setMarca((Marca)cmbMarcas.getSelectedItem());

		try {
			controladorCarro.create(carroNuevo);
		} catch (PreexistingEntityException pee) {
			System.err.println(pee);
		} catch (Exception e){
			System.err.println(e);
		}

		actualizarCarros();
		txtPlacaCarro.setText("");
    }//GEN-LAST:event_btnCrearCarroActionPerformed

    private void btnEditarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCarroActionPerformed
		if ( tablaCarros.getSelectedRow() == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaCarros.getModel();

		CarroJpaController controladorCarro = new CarroJpaController(Sistema.getEmf());
		Carro seleccionada  = controladorCarro.findCarro((Integer)modeloActual.getValueAt(tablaCarros.getSelectedRow(), 0));

		if ( seleccionada == null ) {
			System.err.println("No se ha encontrado datos");
		}

		seleccionada.setPlaca(txtPlacaCarro.getText());
		seleccionada.setMarca((Marca)cmbMarcas.getSelectedItem());

		try {
			controladorCarro.edit(seleccionada);
		} catch ( NonexistentEntityException neee ) {
			System.err.println(neee);
		} catch ( Exception e ) {
			System.err.println(e);
		}
		
		actualizarCarros();
    }//GEN-LAST:event_btnEditarCarroActionPerformed

    private void btnBorrarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCarroActionPerformed
		if ( tablaCarros.getSelectedRow() == -1 )
			return;

		DefaultTableModel modeloActual = (DefaultTableModel) tablaCarros.getModel();

		CarroJpaController controladorCarro = new CarroJpaController(Sistema.getEmf());
		Carro seleccionada  = controladorCarro.findCarro((Integer)modeloActual.getValueAt(tablaCarros.getSelectedRow(), 0));

		if ( seleccionada == null ) {
			System.err.println("No se ha encontrado datos");
		}

		try {
			controladorCarro.destroy(seleccionada.getIdCarro());
		} catch ( NonexistentEntityException neee ) {
			System.err.println(neee);
		} catch ( Exception e ) {
			System.err.println(e);
		}
		
		actualizarCarros();
    }//GEN-LAST:event_btnBorrarCarroActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("GTK+".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new PrincipalUI().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrarCarro;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnCrearCarro;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarCarro;
    private javax.swing.JComboBox cmbMarcas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelCarros;
    private javax.swing.JPanel panelMarcas;
    private javax.swing.JTabbedPane pestanas;
    private javax.swing.JTable tablaCarros;
    private javax.swing.JTable tablaMarca;
    private javax.swing.JTextField txtMarcaNombre;
    private javax.swing.JTextField txtPlacaCarro;
    // End of variables declaration//GEN-END:variables
}
